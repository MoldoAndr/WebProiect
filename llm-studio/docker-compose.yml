version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: llm-studio-frontend
    restart: unless-stopped
    networks:
      - llm-studio-network
    depends_on:
      - backend
    volumes:
      - frontend-build:/app/build

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: llm-studio-backend
    restart: unless-stopped
    networks:
      - llm-studio-network
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - SECRET_KEY=${SECRET_KEY:-replace_with_secure_key_in_production}
      - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY:-replace_with_secure_key_in_production}
      - MONGO_USER=${MONGO_USER:-llmstudio}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-change_this_password_in_production}
      - MONGO_HOST=mongodb
      - MONGO_DB=llm_studio
      - FRONTEND_URL=${FRONTEND_URL:-https://localhost}
      - LOG_LEVEL=info
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  llm-management:
    build:
      context: ./llm-management
      dockerfile: Dockerfile
    container_name: llm-studio-llm-management
    restart: on-failure
    networks:
      - llm-studio-network
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./llm-management:/app
    environment:
      - MONGO_USER=${MONGO_USER:-llmstudio}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-change_this_password_in_production}
      - MONGO_HOST=mongodb
      - MONGO_DB=llm_studio
      - LOG_LEVEL=info
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]

  mongodb:
    image: mongo:latest
    container_name: llm-studio-mongodb
    restart: unless-stopped
    networks:
      - llm-studio-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-llmstudio}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-change_this_password_in_production}
      - MONGO_INITDB_DATABASE=llm_studio
    volumes:
      - mongodb-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command: ["--auth"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "-u", "${MONGO_USER:-llmstudio}", "-p", "${MONGO_PASSWORD:-change_this_password_in_production}", "--authenticationDatabase", "admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: llm-studio-nginx
    restart: unless-stopped
    networks:
      - llm-studio-network
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - frontend
      - backend
      - llm-management
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - frontend-build:/usr/share/nginx/html

networks:
  llm-studio-network:
    driver: bridge

volumes:
  mongodb-data:
  frontend-build:
